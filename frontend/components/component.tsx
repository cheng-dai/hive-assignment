/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/CX5B34GyZeb
 */
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import {
  CardDescription,
  CardTitle,
  CardHeader,
  CardContent,
  Card,
  CardFooter,
} from '@/components/ui/card';
import { ResponsiveLine } from '@nivo/line';
import { Input } from '@/components/ui/input';

export function Component() {
  return (
    <div className="flex flex-col w-full min-h-screen">
      <header className="flex items-center h-16 px-4 border-b shrink-0 md:px-6">
        <Link
          className="flex items-center gap-2 text-lg font-semibold sm:text-base mr-4"
          href="#"
        >
          <FrameIcon className="w-6 h-6" />
          <span className="sr-only">Acme Inc</span>
        </Link>
        <nav className="hidden font-medium sm:flex flex-row items-center gap-5 text-sm lg:gap-6">
          <Link className="text-gray-500 " href="#">
            Overview
          </Link>
          <Link className="font-bold whitespace-nowrap" href="#">
            CPU Usage
          </Link>
          <Link className="text-gray-500 " href="#">
            Settings
          </Link>
        </nav>
        <div className="flex items-center w-full gap-4 md:ml-auto md:gap-2 lg:gap-4">
          <Button className="rounded-full ml-auto" size="icon" variant="ghost">
            <span className="sr-only">Toggle user menu</span>
          </Button>
        </div>
      </header>
      <main className="flex min-h-[calc(100vh_-_theme(spacing.16))] bg-gray-100/40 flex-1 flex-col gap-4 p-4 md:gap-8 md:p-10 ">
        <div className="max-w-6xl w-full mx-auto grid gap-2">
          <h1 className="font-semibold text-3xl">CPU Usage Dashboard</h1>
        </div>
        <div className="grid gap-6 max-w-6xl w-full mx-auto">
          <div>
            <Card className="p-0 overflow-hidden">
              <CardHeader>
                <CardDescription className="text-sm font-medium">
                  Average CPU Usage
                </CardDescription>
                <CardTitle className="text-2xl">45%</CardTitle>
              </CardHeader>
              <CardContent>
                <TimeseriesChart className="aspect-[9/4]" />
              </CardContent>
            </Card>
          </div>
          <div className="grid gap-6 lg:grid-cols-3">
            <Card className="relative overflow-hidden">
              <CardHeader className="flex flex-row items-center border-b">
                <CardTitle>Top Users by CPU Usage</CardTitle>
              </CardHeader>
              <CardContent className="grid gap-4 text-sm p-6">
                <div className="flex items-center justify-between mb-4">
                  <Input className="mr-2" placeholder="Filter users" />
                  <select className="border rounded p-2">
                    <option value="">Filter by CPU Usage</option>
                    <option value="30">{`> 30%`}</option>
                    <option value="40">{`> 40%`}</option>
                    <option value="50">{`> 50%`}</option>
                    <option value="60">{`> 60%`}</option>
                    <option value="70">{`> 70%`}</option>
                  </select>
                </div>
                <div className="flex items-center">
                  <div>CN-1013</div>
                  <div className="font-semibold ml-auto">75%</div>
                </div>
                <div className="flex items-center">
                  <div>CN-2045</div>
                  <div className="font-semibold ml-auto">70%</div>
                </div>
                <div className="flex items-center">
                  <div>CN-3454</div>
                  <div className="font-semibold ml-auto">65%</div>
                </div>
                <div className="flex items-center">
                  <div>IN-0094</div>
                  <div className="font-semibold ml-auto">60%</div>
                </div>
                <div className="flex items-center">
                  <div>CA-1023</div>
                  <div className="font-semibold ml-auto">55%</div>
                </div>
              </CardContent>
              <CardFooter className="pb-4 px-6 justify-center bg-gradient-to-b from-background/50 to-background absolute inset-x-0 bottom-0">
                <Button
                  className="gap-2 rounded-full bg-white"
                  size="sm"
                  variant="outline"
                >
                  View All
                </Button>
              </CardFooter>
            </Card>
          </div>
        </div>
      </main>
    </div>
  );
}

function FrameIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="22" x2="2" y1="6" y2="6" />
      <line x1="22" x2="2" y1="18" y2="18" />
      <line x1="6" x2="6" y1="2" y2="22" />
      <line x1="18" x2="18" y1="2" y2="22" />
    </svg>
  );
}

function TimeseriesChart(props) {
  return (
    <div {...props}>
      <ResponsiveLine
        data={[
          {
            id: 'Desktop',
            data: [
              { x: '2018-01-01', y: 7 },
              { x: '2018-01-02', y: 5 },
              { x: '2018-01-03', y: 11 },
              { x: '2018-01-04', y: 9 },
              { x: '2018-01-05', y: 12 },
              { x: '2018-01-06', y: 16 },
              { x: '2018-01-07', y: 13 },
            ],
          },
          {
            id: 'Mobile',
            data: [
              { x: '2018-01-01', y: 9 },
              { x: '2018-01-02', y: 8 },
              { x: '2018-01-03', y: 13 },
              { x: '2018-01-04', y: 6 },
              { x: '2018-01-05', y: 8 },
              { x: '2018-01-06', y: 14 },
              { x: '2018-01-07', y: 11 },
            ],
          },
        ]}
        margin={{ top: 10, right: 20, bottom: 40, left: 40 }}
        xScale={{
          type: 'time',
          format: '%Y-%m-%d',
          useUTC: false,
          precision: 'day',
        }}
        xFormat="time:%Y-%m-%d"
        yScale={{
          type: 'linear',
          min: 0,
          max: 'auto',
        }}
        axisTop={null}
        axisRight={null}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
          format: '%d',
          tickValues: 'every 1 day',
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 5,
          tickPadding: 16,
        }}
        colors={['#2563eb', '#e11d48']}
        pointSize={6}
        useMesh={true}
        gridYValues={6}
        theme={{
          tooltip: {
            chip: {
              borderRadius: '9999px',
            },
            container: {
              fontSize: '12px',
              textTransform: 'capitalize',
              borderRadius: '6px',
            },
          },
          grid: {
            line: {
              stroke: '#f3f4f6',
            },
          },
        }}
        role="application"
      />
    </div>
  );
}
